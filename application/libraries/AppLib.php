<?php class AppLib_Core{	public $userRegions = false;	static $instance;		public static function instance()	{		// Load the Auth instance		if(empty(self::$instance)) self::$instance = new AppLib();				return self::$instance;	}		function __construct() {}	public function setUserRegions($array = array()){			if(!Lib::config('app.region_select_enabled')):			AppLib::instance()->userRegions = array();			return;		endif;				AppLib::instance()->userRegions = $array;				$expire = (60*60*24*365);		cookie::set('region_ids', count($array) ? join(',', array_keys($array)) : '_all_', $expire); 	}	public function resetUserRegions(){		AppLib::instance()->userRegions = array();		cookie::delete('region_ids');	}	public function getUserRegions($keysonly = false){			if(!is_array(AppLib::instance()->userRegions)):						$userRegions = array();						if(Lib::config('app.region_select_enabled')):							if($region_ids = cookie::get('region_ids')):										if($region_ids != '_all_'):						$userRegions = ORM::factory('region')->in('id', explode(',', $region_ids))->find_all()->select_list();					endif;									elseif($user = Auth::instance()->user):										if($user->regions->count()):												$userRegions = $user->regions->select_list();										endif;															self::setUserRegions($userRegions);									endif;							endif;						AppLib::instance()->userRegions = $userRegions;					else:					$userRegions = AppLib::instance()->userRegions;									endif;				if($keysonly) return array_keys($userRegions);				return $userRegions;	}		public function getRegions($current = NULL, $params = array()){		$varname = !empty($params['varname'])?$params['varname']:'region_id';		$region = new Region_Model;		$list = $region->find_all();		$select = '';		if(count($list)):			$select = '<select id="'.$varname.'" name="'.$varname.'" title="Регион" class="form-control">'."\n";			foreach($list as $region):				$select .= '	<option value="'.$region->id.'"'.form::selected($current, $region->id).'>'.$region->title.'</option>'."\n";			endforeach;			$select .= '</select>'."\n";		endif;		return $select;	}	public function getTypes($params = array(), $current = NULL){		$varname = !empty($params['varname'])?$params['varname']:('type_id'.(!empty($params['multiple'])?'[]':''));				$autotitles = array();				if(!empty($params['category']) and !$params['category']->isEmpty()){			$list = $params['category']->types;			if($params['category']->autotitle)			{				$autotitles = $params['category']->title_formats->as_id_array('type_id');			}		}		else		{			$type = new Type_Model;			$list = $type->find_all();		}		if(empty($params['titlevar'])) $params['titlevar'] = 'title';				$output = '';		if(count($list)):			switch(@$params['output']):				case 'checkbox':					foreach($list as $key => $type):						$cur = '';							if(is_array($current) and in_array($type->id,$current)):							$cur = $type->id;						elseif(is_object($current)):							if(in_array($type->id, array_keys($current->select_list('id',$params['titlevar'])))):								$cur = $type->id;							endif;						else:							$cur = $current;								endif;						$output .= '	<label for="t'.$key.'"><input type="checkbox" id="t'.$key.'" name="'.$varname.'" value="'.$type->id.'"'. form::checked($cur, $type->id, !empty($params['select_all'])). '> '.$type->{$params['titlevar']}.'</label><br>';					endforeach;				break;				default:					$output = '<select title="Тип" id="'.$varname.'" name="'.$varname.'"'.(!empty($params['multiple'])?' multiple="multiple" size="'.count($list).'"':'').''.(!empty($params['nodis'])?' class="nodis"':'').'>'."\n";					if($list->count() > 1):						$output .= '	<option value=""';						if(empty($params['nodis'])) $output .= ' class="dis"';						$output .= '>'. (!empty($params['distitle'])?$params['distitle']:'Выберите тип').'</option>'."\n";					endif;					foreach($list as $type):						if(is_array($current) and in_array($type->id,$current)) $cur = $type->id;						else $cur = $current;						if(!empty($autotitles[$type->id]->format) or !empty($autotitles[0]->format)):							$autotitle = '|1';						else:							$autotitle = '';						endif;						$output .= '	<option title="'.$type->has_price.$autotitle.'" value="'.$type->id.'"'.form::selected($cur, $type->id,!empty($params['select_all'])).'>'.$type->{$params['titlevar']}.'</option>';					endforeach;					$output .= '</select>';				break;			endswitch;		endif;				return $output;			}}/* ?> */